{{- $fullname := include "crafty.name" . -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullname }}
  namespace: {{ .Values.namespace }}
  annotations:
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 1000m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.org/ssl-services: "{{ $fullname }}"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/websocket-services: "{{ $fullname }}"
    nginx.org/websocket-services: "{{ $fullname }}"
spec:
  ingressClassName: nginx
  tls:
  {{- range .Values.ingress.hosts }}
    - hosts:
      {{- $hostname := .host }}
      {{- range .subdomains }}
        - {{ . }}.{{ $hostname }}
      {{- end }}
      secretName: {{ .tls.name }}
  {{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    {{- $hostname := .host }}
    {{- range .subdomains }}
    - host: {{ . }}.{{ $hostname }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ $fullname }}
                port:
                  number: {{ if eq . "crafty" }}
                            {{ $.Values.service.ports.crafty.port }}
                          {{ else if eq . "dynmap" }}
                            {{ $.Values.service.ports.dynmap.port }}
                          {{ end }}
    {{- end }}
  {{- end }}